
"""credit card fraud.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1JQFmPXmhF6KcRl_Or43Jt2ltg8fk_90p
"""

import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score
from sklearn.tree import DecisionTreeClassifier
credit_card_train_data=pd.read_csv('fraudTrain.csv')
credit_card_train_data.head()

credit_card_test_data=pd.read_csv('fraudTest.csv')
credit_card_test_data.head()

credit_card_train_data.info()
credit_card_test_data.info()

credit_card_train_data.isnull().sum()

credit_card_test_data.isnull().sum()

credit_card_train_data = credit_card_train_data[['Unnamed: 0', 'is_fraud']]
credit_card_test_data = credit_card_test_data[['Unnamed: 0', 'is_fraud']]

print(credit_card_train_data.shape)
print(credit_card_test_data.shape)

# Check distribution of legit and fraud transactions in train data
print(credit_card_train_data['is_fraud'].value_counts())
# Check distribution of legit and fraud transactions in test data
print(credit_card_test_data['is_fraud'].value_counts())

# separating the data for analysis
legit = credit_card_train_data[credit_card_train_data.is_fraud == 0]
fraud = credit_card_train_data[credit_card_train_data.is_fraud == 1]
print(legit.shape)
print(fraud.shape)

# Check for missing values in y_train and y_test
print(y_train.isnull().sum())
print(y_test.isnull().sum())

# missing values.
y_train = y_train.dropna()
X_train = X_train.loc[y_train.index]
y_test = y_test.dropna()
X_test = X_test.loc[y_test.index]
model = LogisticRegression()
model.fit(X_train, y_train)

# Predicting on the test data
y_pred_test = model.predict(X_test)
accuracy_test = accuracy_score(y_test, y_pred_test)
print("Test Accuracy:", accuracy_test)

# Predicting on the train data to get train accuracy
y_pred_train = model.predict(X_train)
accuracy_train = accuracy_score(y_train, y_pred_train)
print("Train Accuracy:", accuracy_train)

print(y_train.isnull().sum())
print(y_test.isnull().sum())
y_train = y_train.dropna()
X_train = X_train.loc[y_train.index]
y_test = y_test.dropna()
X_test = X_test.loc[y_test.index]

# Predictions
y_pred_train_lr = lr_model.predict(X_train)
y_pred_test_lr = lr_model.predict(X_test)
# Decision Tree
dt_model = DecisionTreeClassifier()
dt_model.fit(X_train, y_train)
y_pred_train_dt = dt_model.predict(X_train)
y_pred_test_dt = dt_model.predict(X_test)
accuracy_train_dt = accuracy_score(y_train, y_pred_train_dt)
accuracy_test_dt = accuracy_score(y_test, y_pred_test_dt)
print("Decision Tree - Train Accuracy:", accuracy_train_dt)
print("Decision Tree - Test Accuracy:", accuracy_test_dt)
